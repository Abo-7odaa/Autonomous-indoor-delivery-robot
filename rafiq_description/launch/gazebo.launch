<launch>

    <arg name="model" 
           default="$(find rafiq_description)/urdf/rafiq.xacro"/>
  
    <arg name="gui" 
           default="true" />
  
    <arg name="rvizconfig" 
           default="$(find my_robot_description)/rviz/my_robot.rviz" />
           
    <arg name="mode" default="simulation"/>
  
    <!-- ###################################################################### -->
  
    <!-- 
      Converts the xacro robot information to UDRF and use it as a robot_description parameter
    -->
    <param name="robot_description" 
               command="$(find xacro)/xacro $(arg model)" />
  
    <param name="use_gui" 
               value="$(arg gui)"/>
  
    <!-- ###################################################################### -->
  
    <!--
      Reads the robot model description, finds all joints, and publishes joint values to all nonfixed joints using GUI sliders. 
    -->
    <node name="joint_state_publisher" 
              pkg="joint_state_publisher" 
              type="joint_state_publisher" />
  
    <!-- 
      Reads the current robot joint states and publishes the 3D poses of each robot link using the kinematics tree build from the URDF. The 3D pose of the robot is published as ROS tf (transform). 
    -->
    <node name="robot_state_publisher" 
              pkg="robot_state_publisher" 
              type="robot_state_publisher" />
  
    <!-- Show in Rviz -->
    <node name="rviz" 
              pkg="rviz" 
              type="rviz" 
              args="-d $(arg rvizconfig)" 
              required="false" />
<include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/empty_world.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/> <!-- Inert - see gazebo_ros_pkgs issue #491 -->
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
</include>
 <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model my_robot -param robot_description" respawn="false" output="screen"/>        
<!-- turtlebot_teleop_key already has its own built in velocity smoother -->
<node pkg="turtlebot_teleop" type="turtlebot_teleop_key" name="turtlebot_teleop_keyboard"  output="screen">
  <param name="scale_linear" value="0.5" type="double"/>
  <param name="scale_angular" value="1.5" type="double"/>
  <remap from="turtlebot_teleop_keyboard/cmd_vel" to="/cmd_vel"/>
</node>      
  </launch>
  